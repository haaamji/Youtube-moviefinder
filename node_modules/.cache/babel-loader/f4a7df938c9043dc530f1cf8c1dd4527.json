{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Sources\\\\React\\\\youtube-moviefinder\\\\src\\\\components\\\\App.js\";\nimport '../styles/App.css';\nimport React, { Component } from 'react';\nimport Youtube from '../apis/Youtube';\nimport ApiService from '../apis/ApiService'; //SpringBoot서버 연결 API\n//화면 component\n\nimport SearchBar from './SearchBar';\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoDetail';\nimport SaveList from './SaveList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async term => {\n      const res = await Youtube.get('/search', {\n        params: {\n          q: term\n        }\n      }); //debugger;\n\n      this.setState({\n        videos: res.data.items\n      });\n    };\n\n    this.handleVideoSelect = video => {\n      //debugger;\n      this.setState({\n        slectedVideo: video\n      }); // 값 넣음\n\n      console.log('⭐', this.state.slectedVideo); //로고로 콘솔구별\n    };\n\n    this.handleVideoSave = video => {\n      alert('동영상 저장!');\n    };\n\n    this.reloadFavoriteMovies = async () => {\n      //비동기\n      await ApiService.fetchMovies().then(res => {\n        debugger;\n        let temps = res.data;\n        var i = 0;\n        var fvl = [];\n\n        while (i < temps.length) {\n          //TODO : \n          fvl.push({\n            idx: temps[i].id,\n            id: {\n              kind: \"youtube#video\",\n              videoId: temps[i].video_id_videoId\n            },\n            snippet: {\n              title: temps[i].video_snippet_title,\n              description: temps[i].video_snippet_description\n            }\n          });\n          i += 1;\n        }\n      }).catch(err => {\n        console.error(\"ApiService.fetchMovies() 에러\", err);\n        alert(\"즐겨찾기 목록 불러오기 오류🤦‍♀️\\n 관리자에게 문의하세요\");\n      });\n    };\n\n    this.state = {\n      //setState메서드로 값 변경가능!\n      videos: [],\n      //검색된 결과가 저장되는 배열\n      slectedVideo: null,\n      favoriteVideos: [] //즐겨찾기용 배열\n\n    };\n  }\n\n  componentDidMount() {\n    //라이프 사이클 이벤트, render후 실행\n    this.reloadFavoriteMovies(); //메서드 실행\n  }\n\n  render() {\n    console.info('App render()');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App container show-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n            handleFormSubmit: this.handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row pt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-8\",\n              style: {\n                backgroundColor: 'whitesmoke'\n              },\n              children: [/*#__PURE__*/_jsxDEV(VideoDetail, {\n                video: this.state.slectedVideo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(SaveList, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4\",\n              children: /*#__PURE__*/_jsxDEV(VideoList, {\n                videos: this.state.videos,\n                handleVideoSelect: this.handleVideoSelect,\n                handleVideoSave: this.handleVideoSave\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Sources/React/youtube-moviefinder/src/components/App.js"],"names":["React","Component","Youtube","ApiService","SearchBar","VideoList","VideoDetail","SaveList","App","constructor","props","handleSubmit","term","res","get","params","q","setState","videos","data","items","handleVideoSelect","video","slectedVideo","console","log","state","handleVideoSave","alert","reloadFavoriteMovies","fetchMovies","then","temps","i","fvl","length","push","idx","id","kind","videoId","video_id_videoId","snippet","title","video_snippet_title","description","video_snippet_description","catch","err","error","favoriteVideos","componentDidMount","render","info","backgroundColor"],"mappings":"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","sourcesContent":["import '../styles/App.css';\nimport React, { Component } from 'react';\n\n\nimport Youtube from '../apis/Youtube';\nimport ApiService from '../apis/ApiService'; //SpringBoot서버 연결 API\n\n//화면 component\nimport SearchBar from './SearchBar';\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoDetail';\nimport SaveList from './SaveList';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { //setState메서드로 값 변경가능!\n      videos : [],//검색된 결과가 저장되는 배열\n      slectedVideo: null,\n      favoriteVideos : [] //즐겨찾기용 배열\n    }       \n  }\n\n  handleSubmit = async(term) => {\n    const res = await Youtube.get('/search', {\n      params: { q : term }\n    });\n    //debugger;\n    this.setState({\n      videos: res.data.items\n    });\n  }\n  //videoItem에서 전달된 비디오 객체를 SelectedVideo로 할당. \n  //SeletedVideo는 VideoDetail로 전달\n  handleVideoSelect = (video) => {\n    //debugger;\n    this.setState({ slectedVideo: video}); // 값 넣음\n    console.log('⭐',this.state.slectedVideo);//로고로 콘솔구별\n\n  }\n  //VideoItem -> VideoList -> App처리\n  handleVideoSave = (video) => {\n    alert('동영상 저장!');\n\n  }\n\n  componentDidMount() {//라이프 사이클 이벤트, render후 실행\n    this.reloadFavoriteMovies(); //메서드 실행\n  }\n\n  reloadFavoriteMovies = async() => {//비동기\n    await ApiService.fetchMovies()\n      .then(res => {\n        debugger;\n        let temps = res.data;\n        var i = 0;\n        var fvl = [];\n        while ( i < temps.length ) {\n          //TODO : \n          fvl.push({\n            idx: temps[i].id,\n            id: { \n              kind: \"youtube#video\", \n              videoId: temps[i].video_id_videoId},\n            snippet: \n              {title: temps[i].video_snippet_title, \n              description: temps[i].video_snippet_description}\n            });\n          i += 1;\n        }\n      })\n      .catch(err => {\n        console.error(\"ApiService.fetchMovies() 에러\", err);\n        alert(\"즐겨찾기 목록 불러오기 오류🤦‍♀️\\n 관리자에게 문의하세요\");\n      });\n  }\n\n  render() {\n    console.info('App render()');\n    return (\n      <div className='App container show-grid'>\n        <div className='row'>\n          <div className='col'>\n            {/* 검색바 js주석 */}\n            <SearchBar\n              handleFormSubmit={this.handleSubmit}></SearchBar>\n            <div className='row pt-3'>\n              {/* pt :1~5 넓이 조절 */}\n              <div className='col-8' style={{backgroundColor:'whitesmoke'}}>\n                {/* 유튜브 플레이어 */}\n                <VideoDetail\n                  video={this.state.slectedVideo} />\n                {/* 저장 리스트  */}\n                <SaveList />\n                \n              </div>\n              <div className='col-4'>\n                {/* 검색결과 */}\n                <VideoList \n                  videos={this.state.videos}\n                  handleVideoSelect = {this.handleVideoSelect}\n                  handleVideoSave= {this.handleVideoSave}>  \n                </VideoList>\n              </div>\n            </div>\n          </div>\n        </div>\n       \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}